on: [workflow_dispatch]

env: 
  RESOURCE_GROUP_NAME: 'mh-databricks-rg'
  RESOURCE_GROUP_LOCATION: 'uaenorth'

name: IaC-Reprovision
jobs:
  Redeploy-Databricks-Clusters:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Delete resource group if exists
      uses: Azure/CLI@v1
      with:
        inlineScript: |
          #!/bin/bash
          if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
            az group delete --name ${{ env.RESOURCE_GROUP_NAME }} --yes
            echo "Azure resource group Deleted"
          fi

    - name: Create resource group if needed
      uses: Azure/CLI@v1
      with:
        inlineScript: |
          #!/bin/bash
          if $(az group exists --name ${{ env.RESOURCE_GROUP_NAME }}) ; then
            echo "Azure resource group already exists, skipping creation..."
          else
            az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.RESOURCE_GROUP_LOCATION }}
            echo "Azure resource group created"
          fi

    - name: Databricks ARM deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./arm-templates/databricksdeploy.json
        parameters: ./arm-templates/parameters.json
    
    - name: Create Clusters
      uses: azure/CLI@v1
      with: 
        inlineScript: |
          #!/bin/bash
          export DATABRICKS_AAD_TOKEN=$(curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
          https://login.microsoftonline.com/${{ secrets.AZURE_CREDENTIALS_TENANTID }}/oauth2/v2.0/token \
          -d 'client_id=${{ secrets.AZURE_CREDENTIALS_CLIENTID }}' \
          -d 'grant_type=client_credentials' \
          -d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
          -d 'client_secret=${{ secrets.AZURE_CREDENTIALS_CLIENTSECRET }}')
          echo "Setting DATABRICKS_AAD_TOKEN"
          echo $DATABRICKS_AAD_TOKEN